plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.6'
    id 'io.spring.dependency-management' version '1.1.4'
    id "com.github.davidmc24.gradle.plugin.avro" version "1.9.1"
}

group = 'com.kingshuk.messaging.kafka'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
    gradlePluginPortal()
    maven {
        name = "confluent"
        url = "http://packages.confluent.io/maven/"
        allowInsecureProtocol = true
    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.kafka:spring-kafka'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.kafka:spring-kafka-test'

    //Avro dependencies
    // https://mvnrepository.com/artifact/org.apache.avro/avro
    implementation 'org.apache.avro:avro:1.11.3'

    // https://mvnrepository.com/artifact/io.confluent/kafka-avro-serializer
    implementation 'io.confluent:kafka-avro-serializer:7.5.1'
}

tasks.named('bootBuildImage') {
    builder = 'paketobuildpacks/builder-jammy-base:latest'
}

tasks.withType(Copy).configureEach { duplicatesStrategy 'exclude' }

tasks.named('test') {
    useJUnitPlatform()
}

sourceSets{
    main{
        java.srcDirs 'src/main/java', 'src/main/avro','build/generated-main-avro-java'
        resources.srcDirs 'src/main/resources'
    }

    test{
        java.srcDirs 'src/test/java'
        resources.srcDirs 'src/test/resources'
    }
}
